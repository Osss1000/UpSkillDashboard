@{
    ViewData["Title"] = "Dashboard";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Dashboard</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item active">Overview</li>
    </ol>

    <!-- Statistics Cards -->
    <div class="row">
        <div class="col-xl-3 col-md-6">
            <div class="card bg-primary text-white mb-4">
                <div class="card-body">Total Users: @ViewData["TotalUsers"]</div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-success text-white mb-4">
                <div class="card-body">Workers: @ViewData["TotalWorkers"]</div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-warning text-white mb-4">
                <div class="card-body">Clients: @ViewData["TotalClients"]</div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card bg-danger text-white mb-4">
                <div class="card-body">Organizations: @ViewData["TotalOrganizations"]</div>
            </div>
        </div>
    </div>

    <!-- Growth Charts -->
    <div class="row">
        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header"><i class="fas fa-chart-line me-1"></i> User Growth</div>
                <div class="card-body">
                    <canvas id="userGrowthChart" width="100%" height="40"></canvas>
                </div>
            </div>
        </div>
        <div class="col-xl-6">
            <div class="card mb-4">
                <div class="card-header"><i class="fas fa-chart-bar me-1"></i> Job Growth</div>
                <div class="card-body">
                    <canvas id="jobGrowthChart" width="100%" height="40"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Signups -->
    <div class="row">
        <div class="col-xl-4">
            <div class="card mb-4">
                <div class="card-header"><i class="fas fa-user-plus me-1"></i> Recent Clients</div>
                <div class="card-body">
                    <ul class="list-group">
                        @foreach (var client in (List<UpSkillDashboard.Models.Client>)ViewData["RecentClients"])
                        {
                            <li class="list-group-item">@client.User.Name - @client.User.Email</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
        <div class="col-xl-4">
            <div class="card mb-4">
                <div class="card-header"><i class="fas fa-user-cog me-1"></i> Recent Workers</div>
                <div class="card-body">
                    <ul class="list-group">
                        @foreach (var worker in (List<UpSkillDashboard.Models.Worker>)ViewData["RecentWorkers"])
                        {
                            <li class="list-group-item">@worker.User.Name - @worker.User.Email</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
        <div class="col-xl-4">
            <div class="card mb-4">
                <div class="card-header"><i class="fas fa-building me-1"></i> Recent Organizations</div>
                <div class="card-body">
                    <ul class="list-group">
                        @foreach (var organization in (List<UpSkillDashboard.Models.Organization>)ViewData["RecentOrganizations"])
                        {
                            <li class="list-group-item">@organization.User.Name - @organization.User.Email</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Chart.js Scripts -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Load Growth Data
    fetch('/Home/GetGrowthChartData')
        .then(response => response.json())
        .then(data => {
            const userLabels = data.userGrowth.map(d => `${d.Year}-${d.Month}`);
            const userCounts = data.userGrowth.map(d => d.Count);

            const jobLabels = data.paidJobGrowth.map(d => `${d.Year}-${d.Month}`);
            const paidJobCounts = data.paidJobGrowth.map(d => d.Count);
            const volunteerJobCounts = data.volunteerJobGrowth.map(d => d.Count);

            // User Growth Chart
            new Chart(document.getElementById("userGrowthChart"), {
                type: 'line',
                data: {
                    labels: userLabels,
                    datasets: [{
                        label: "New Users",
                        data: userCounts,
                        backgroundColor: 'rgba(54, 162, 235, 0.5)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 2,
                        fill: true
                    }]
                }
            });

            // Job Growth Chart
            new Chart(document.getElementById("jobGrowthChart"), {
                type: 'bar',
                data: {
                    labels: jobLabels,
                    datasets: [
                        {
                            label: "Volunteer Jobs",
                            data: volunteerJobCounts,
                            backgroundColor: 'rgba(75, 192, 192, 0.5)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        }
                    ]
                }
            });
        });
</script>
